#!/usr/bin/env python

from __future__ import unicode_literals

import os

import trilearn.auxiliary_functions as aux


def main(burnin_end, input_directory, output_directory, file_extension):

    trajectories = aux.read_all_trajectories_in_dir(input_directory)
    if not os.path.exists(output_directory):
        os.mkdir(output_directory)

    aux.plot_multiple_traj_statistics(trajectories, burnin_end,
                                      write_to_file=True,
                                      output_directory=output_directory,
                                      file_extension=file_extension)

if __name__ == "__main__":
    import argparse
    parser = argparse.ArgumentParser("Generates analytics for the Markov chain of decomposable graphs generated "
                                     "by particle Gibbs.")

    parser.add_argument(
        '-o', '--output_directory',
        required=False, default="./",
        help="Output directory")
    parser.add_argument(
        '-i', '--input_directory',
        required=False, default="./",
        help="Input directory")
    parser.add_argument(
        '-e', '--file_extension',
        required=False, default="eps",
        help="File type")
    parser.add_argument(
        '--burnin_end', type=int, required=False, default=0,
        help="Burn-in period ends at this index")

    args = parser.parse_args()
    main(**args.__dict__)


